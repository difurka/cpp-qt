#pragma once

#include <QTimer>
#include <QMainWindow>
#include <QObject>
#include <QWidget>

namespace prac {

#ifndef PRAC_TESTS

using QTimer = ::QTimer;

#else

class QTimer : public ::QObject{

    Q_OBJECT

<<<<<<< HEAD
public:
    QTimer() {
        last_created_ = this;
    }

    QTimer(QObject* w) : QObject(w){
        last_created_ = this;
    }
    
    QTimer(const QTimer&) = delete;

    ~QTimer() override =default;

=======
    bool is_on_ = false;
    int state_ = 0;

    bool single_shot_ = false;
    int interval_ = 0;

public:
    QTimer() = default;
    QTimer(QMainWindow* w) {
        (void)w;
    }

    ~QTimer() override =default;
>>>>>>> ed151b7 (Обновление репы из коммита 5bb7176501eee9f1f0866493eda49c1fcf90db60)
    bool isOn() const {
        return is_on_;
    }

<<<<<<< HEAD
=======
    int getState() const {
        return state_;
    }

>>>>>>> ed151b7 (Обновление репы из коммита 5bb7176501eee9f1f0866493eda49c1fcf90db60)
    int getInterval() const {
        return interval_;
    }

    void emitTimeout() {
        emit timeout();
    }

<<<<<<< HEAD
    static QTimer* getLastCreated() {
        return last_created_;
    }
=======
>>>>>>> ed151b7 (Обновление репы из коммита 5bb7176501eee9f1f0866493eda49c1fcf90db60)

public slots:
    void start(int msec) {
        is_on_ = true;
<<<<<<< HEAD
        interval_ = msec;
=======
        state_ = msec;
>>>>>>> ed151b7 (Обновление репы из коммита 5bb7176501eee9f1f0866493eda49c1fcf90db60)
    }

    void start() {
        is_on_ = true;
    }

    void setInterval(int interval) {
        interval_ = interval;
    }

    void setSingleShot(bool single_shot) {
        single_shot_ = single_shot;
    }

    void stop() {
        is_on_ = false;
<<<<<<< HEAD
=======
        state_ = 0;
>>>>>>> ed151b7 (Обновление репы из коммита 5bb7176501eee9f1f0866493eda49c1fcf90db60)
    }

signals:
    void timeout();

<<<<<<< HEAD
private:
    inline static QTimer* last_created_ = nullptr;

    bool is_on_ = false;
    bool single_shot_ = false;
    int interval_ = 0;
=======
>>>>>>> ed151b7 (Обновление репы из коммита 5bb7176501eee9f1f0866493eda49c1fcf90db60)
};


#endif

}  // namespace prac
